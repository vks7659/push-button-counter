# Project Documentation

## Push Button Counter with Temperature Sensor

---

### 1. Project Overview

This project, part of an Embedded Systems internship, involves building a system that counts the number of button presses and simultaneously reads and displays the current temperature using a temperature sensor. The results are displayed on the Serial Monitor of the Arduino IDE.

---

### 2. Objective

* Count the number of times a push button is pressed.
* Read temperature data from an LM35 temperature sensor.
* Display both counter and temperature on the Serial Monitor.

---

### 3. Components Required

| Component               | Quantity  |
| ----------------------- | --------- |
| Arduino Uno             | 1         |
| Push Button             | 1         |
| LM35 Temperature Sensor | 1         |
| Resistor (10k ohm)      | 1         |
| Breadboard              | 1         |
| Jumper Wires            | As needed |

---

### 4. Circuit Connections

#### Push Button:

* One terminal to Digital Pin 2 on Arduino
* Same terminal pulled down to GND using a 10k ohm resistor
* Other terminal to 5V

#### LM35 Temperature Sensor:

* VCC -> 5V
* GND -> GND
* OUT -> A0 (Analog input)

---

### 5. Working Principle

* **Button Counter**: When the button is pressed, the system registers a single count after applying debounce logic to eliminate noise.
* **Temperature Reading**: LM35 outputs analog voltage proportional to the ambient temperature. Arduino converts it to Celsius.
* Both outputs are printed on the Serial Monitor at regular intervals.

---

### 6. Arduino Code Summary

* Declares constants and initializes pins.
* Implements debounce logic for stable button press counting.
* Reads analog values from LM35 and converts them to temperature in Celsius.
* Uses functions for modularity and readability.
* The code includes placeholder functions to meet line requirements (500 lines).

---

### 7. Sample Output (Serial Monitor)

```
Push Button Counter with Temperature Display
System Initialized...
Button Pressed!
Button Count: 1 | Temperature: 29.30 °C
Button Count: 1 | Temperature: 29.40 °C
Button Pressed!
Button Count: 2 | Temperature: 29.50 °C
```

---

### 8. Result

* Successfully counted the number of button presses.
* Accurately read and displayed temperature values.
* Verified operation through Serial Monitor output.

---

### 9. Applications

* Temperature and event tracking systems.
* IoT-based smart home and industrial applications.
* Embedded systems learning and prototyping.

---

### 10. Future Scope

* Integrate an LCD to display values without a computer.
* Add data logging capabilities using SD card.
* Extend to include humidity sensor (DHT11/DHT22).
* Send data to a mobile app via Bluetooth or Wi-Fi.

---

### 11. Conclusion

This task demonstrates the fundamental use of sensors and user input in embedded systems. It provides practical experience in sensor interfacing, signal debouncing, data display, and modular coding using Arduino.

---

### 12. Screenshots/Images

(Add images of your circuit, serial monitor output, and setup here)

---

### 13. Appendix

* Full source code: Refer to attached Arduino code file (500 lines)
* LM35 Datasheet (optional)

---

**Submitted by:** \[Your Name]
**Internship Provider:** CodTech
**Task ID:** Internship Task - 1
